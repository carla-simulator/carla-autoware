#!/usr/bin/env python
#
# Copyright (c) 2019 Intel Corporation
#
# This work is licensed under the terms of the MIT license.
# For a copy, see <https://opensource.org/licenses/MIT>.
"""
This ROS node reads a Twist message from Autoware, converts it to
an AckermannDrive message and sends it Carla

If data is sent out can be controlled by topic /vehicle_control_manual_override
"""
import math
import rospy
from ackermann_msgs.msg import AckermannDrive
from autoware_msgs.msg import VehicleCmd
from std_msgs.msg import Bool

pub = rospy.Publisher("/carla/ego_vehicle/ackermann_cmd", AckermannDrive, queue_size=1)
wheelbase = 3.0
vehicle_control_manual_override = False


def convert_trans_rot_vel_to_steering_angle(v, omega, wheelbase):
    """
    convert translation- and rotation velocity to steering angle
    """
    if omega == 0 or v == 0:
        return 0
    radius = v / omega
    return math.atan(wheelbase / radius)


def callback(data):
    """
    callback for vehicle cmds
    """
    global wheelbase
    global vehicle_control_manual_override
    if vehicle_control_manual_override:
        return
    msg = AckermannDrive()
    msg.speed = data.twist_cmd.twist.linear.x
    msg.steering_angle = convert_trans_rot_vel_to_steering_angle(
        msg.speed, data.twist_cmd.twist.angular.z, wheelbase)
    pub.publish(msg)


def manual_override_callback(data):
    """
    callback for manual overriding the control
    """
    global vehicle_control_manual_override
    vehicle_control_manual_override = data.data
    rospy.loginfo("Vehicle control manual override set to %d", vehicle_control_manual_override)


def twist_to_ackermanndrive():
    """
    mainloop
    """
    rospy.init_node('twist_to_ackermanndrive')
    wheelbase = rospy.get_param('~wheelbase', 3.0)
    rospy.Subscriber("/vehicle_cmd", VehicleCmd, callback, queue_size=1)
    rospy.Subscriber("/vehicle_control_manual_override", Bool,
                     manual_override_callback, queue_size=1)
    rospy.spin()


if __name__ == '__main__':
    twist_to_ackermanndrive()
